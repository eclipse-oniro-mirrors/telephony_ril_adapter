diff --git a/frameworks/src/hril_call_parcel.cpp b/frameworks/src/hril_call_parcel.cpp
index c760dedd08d155c4beaea307c66d884c146ee5f5..10b04a414449622481c3912579909410094f820e 100644
--- a/frameworks/src/hril_call_parcel.cpp
+++ b/frameworks/src/hril_call_parcel.cpp
@@ -279,33 +279,6 @@ std::shared_ptr<EmergencyInfoList> EmergencyInfoList::UnMarshalling(Parcel &parc
 
 void EmergencyInfoList::Dump(std::string, int32_t) {}
 
-bool UusData::ReadFromParcel(Parcel &parcel)
-{
-    if (!Read(parcel, uusDcs)) {
-        return false;
-    }
-    return true;
-}
-
-bool UusData::Marshalling(Parcel &parcel) const
-{
-    if (!Write(parcel, uusDcs)) {
-        return false;
-    }
-    return true;
-}
-
-std::shared_ptr<UusData> UusData::UnMarshalling(Parcel &parcel)
-{
-    std::shared_ptr<UusData> param = std::make_shared<UusData>();
-    if (param == nullptr || !param->ReadFromParcel(parcel)) {
-        param = nullptr;
-    }
-    return param;
-}
-
-void UusData::Dump(std::string, int32_t) {}
-
 bool CallForwardSetInfo::ReadFromParcel(Parcel &parcel)
 {
     if (!Read(parcel, serial)) {
@@ -622,114 +595,6 @@ std::shared_ptr<CallRestrictionResult> CallRestrictionResult::UnMarshalling(Parc
 
 void CallRestrictionResult::Dump(std::string, int32_t) {}
 
-bool CallImsServiceStatus::ReadFromParcel(Parcel &parcel)
-{
-    if (!Read(parcel, smsSrvStatus)) {
-        return false;
-    }
-    if (!Read(parcel, smsSrvRat)) {
-        return false;
-    }
-    if (!Read(parcel, voipSrvStatus)) {
-        return false;
-    }
-    if (!Read(parcel, voipSrvRat)) {
-        return false;
-    }
-    if (!Read(parcel, vtSrvStatus)) {
-        return false;
-    }
-    if (!Read(parcel, vtSrvRat)) {
-        return false;
-    }
-    if (!Read(parcel, vsSrvStatus)) {
-        return false;
-    }
-    if (!Read(parcel, vsSrvRat)) {
-        return false;
-    }
-    return true;
-}
-
-bool CallImsServiceStatus::Marshalling(Parcel &parcel) const
-{
-    if (!Write(parcel, smsSrvStatus)) {
-        return false;
-    }
-    if (!Write(parcel, smsSrvRat)) {
-        return false;
-    }
-    if (!Write(parcel, voipSrvStatus)) {
-        return false;
-    }
-    if (!Write(parcel, voipSrvRat)) {
-        return false;
-    }
-    if (!Write(parcel, vtSrvStatus)) {
-        return false;
-    }
-    if (!Write(parcel, vtSrvRat)) {
-        return false;
-    }
-    if (!Write(parcel, vsSrvStatus)) {
-        return false;
-    }
-    if (!Write(parcel, vsSrvRat)) {
-        return false;
-    }
-    return true;
-}
-
-std::shared_ptr<CallImsServiceStatus> CallImsServiceStatus::UnMarshalling(Parcel &parcel)
-{
-    std::shared_ptr<CallImsServiceStatus> param = std::make_shared<CallImsServiceStatus>();
-    if (param == nullptr || !param->ReadFromParcel(parcel)) {
-        param = nullptr;
-    }
-    return param;
-}
-
-void CallImsServiceStatus::Dump(std::string, int32_t) {}
-
-bool UssdInfo::ReadFromParcel(Parcel &parcel)
-{
-    if (!Read(parcel, n)) {
-        return false;
-    }
-    if (!Read(parcel, str)) {
-        return false;
-    }
-    if (!Read(parcel, dcs)) {
-        return false;
-    }
-    return true;
-}
-
-bool UssdInfo::Marshalling(Parcel &parcel) const
-{
-    if (!Write(parcel, n)) {
-        return false;
-    }
-    if (!Write(parcel, str)) {
-        return false;
-    }
-    if (!Write(parcel, dcs)) {
-        return false;
-    }
-    return true;
-}
-
-std::shared_ptr<UssdInfo> UssdInfo::UnMarshalling(Parcel &parcel)
-{
-    std::shared_ptr<UssdInfo> param = std::make_shared<UssdInfo>();
-    if (param == nullptr || !param->ReadFromParcel(parcel)) {
-        param = nullptr;
-    }
-    return param;
-}
-
-void UssdInfo::Dump(std::string, int32_t) {}
-
 bool UssdNoticeInfo::ReadFromParcel(Parcel &parcel)
 {
     if (!Read(parcel, m)) {
diff --git a/interfaces/innerkits/include/hril_call_parcel.h b/interfaces/innerkits/include/hril_call_parcel.h
index 04a0c63288a6af68b4f55a32772a89eda2c86c79..6c5b1f31f1a0a15f2e8b0fdc0744ffe178e267ef 100644
--- a/interfaces/innerkits/include/hril_call_parcel.h
+++ b/interfaces/innerkits/include/hril_call_parcel.h
@@ -31,14 +31,6 @@ struct DialInfo : public HrilBaseParcel {
     void Dump(std::string, int32_t);
 };
 
-struct UusData : public HrilBaseParcel {
-    int32_t uusDcs; /* Cell Broadcast Data Coding Scheme(default 0). */
-    bool ReadFromParcel(Parcel &parcel);
-    virtual bool Marshalling(Parcel &parcel) const override;
-    std::shared_ptr<UusData> UnMarshalling(Parcel &parcel);
-    void Dump(std::string, int32_t);
-};
-
 struct GetClipResult : public HrilBaseParcel {
     int32_t result; /* query results */
     int32_t action; /* parameter sets/shows the result code presentation status in the TA */
@@ -174,39 +166,6 @@ struct CallForwardQueryInfoList : public HrilBaseParcel {
     void Dump(std::string, int32_t);
 };
 
-struct CallImsServiceStatus : public HrilBaseParcel {
-    int32_t smsSrvStatus;
-    int32_t smsSrvRat;
-    int32_t voipSrvStatus;
-    int32_t voipSrvRat;
-    int32_t vtSrvStatus;
-    int32_t vtSrvRat;
-    int32_t vsSrvStatus;
-    int32_t vsSrvRat;
-
-    bool ReadFromParcel(Parcel &parcel);
-    virtual bool Marshalling(Parcel &parcel) const override;
-    std::shared_ptr<CallImsServiceStatus> UnMarshalling(Parcel &parcel);
-    void Dump(std::string, int32_t);
-};
-
-struct UssdInfo : public HrilBaseParcel {
-    int32_t n; /* Integer value, the control result code is reported, the default value is 0.
-                            0: Disable the reporting of result codes;
-                            1: Enable result code reporting;
-                            2: Exit the session. */
-    std::string str; /* USSD string, the maximum length is 160 characters. */
-    int32_t dcs; /* Integer value, encoding method.
-                                15: Not specified (default 7bit encoding);
-                                68: 8bit encoding (not supported temporarily);
-                                72: UCS2 encoding (not supported temporarily). */
-
-    bool ReadFromParcel(Parcel &parcel);
-    virtual bool Marshalling(Parcel &parcel) const override;
-    std::shared_ptr<UssdInfo> UnMarshalling(Parcel &parcel);
-    void Dump(std::string, int32_t);
-};
-
 struct UssdNoticeInfo : public HrilBaseParcel {
     int32_t m; /* Integer value.
                             0: The network does not require a TE reply (USSD-Notify initiated by the network or TE
